import json

import jwt
from core.unit_of_work import UnitOfWork
import markdown
import requests

from template_service.domain import models


def get_index() -> str:
    """
    Converts markdown file to HTML with GitHub-like styling in dark mode.
    Fully generated by AI.

    """

    with open("index.md", "r", encoding="utf-8") as file:
        markdown_content = file.read()

    extensions = [
        "extra",
        "abbr",
        "attr_list",
        "def_list",
        "fenced_code",
        "footnotes",
        "md_in_html",
        "admonition",
        "codehilite",
        "legacy_attrs",
        "legacy_em",
        "meta",
        "nl2br",
        "sane_lists",
        "smarty",
        "toc",
        "wikilinks",
    ]

    html_content = markdown.markdown(markdown_content, extensions=extensions)

    github_css_url = "https://cdnjs.cloudflare.com/ajax/libs/github-markdown-css/5.1.0/github-markdown-dark.min.css"
    response = requests.get(github_css_url)
    if response.status_code == 200:
        github_css = response.text
    else:
        github_css = "/* Fallback CSS in case the request fails */"

    styled_html = f"""
    <style>
    body {{ background-color: #121212; color: #e0e0e0; }}
    {github_css}
    </style>
    <div class="markdown-body" style="padding: 20px;">
        {html_content}
    </div>
    """

    return styled_html


def get_token_encrypt(_id: str, uow: UnitOfWork) -> str:
    """get_token.

    Args:
        _id:

    Returns:
        str:
    """

    with uow:
        token = uow.repo.get(models.Token, message_id=_id)[0]  # type: models.Token
        value = token.encrypt()

    return {"token": value}


def get_token(id: str, uow: UnitOfWork) -> models.Token:
    """get_token.

    Args:
        id:
        uow:

    Returns:
        models.Token:
    """

    with uow:
        token = uow.repo.get(models.Token, id=id)[0]  # type: models.Token

    return token


def get_user(id: str, uow: UnitOfWork) -> models.User:
    """get_user.

    Args:
        id:
        uow:

    Returns:
        models.User:
    """

    with uow:
        user = uow.repo.get(models.User, id=id)[0]  # type: models.User

    return user
